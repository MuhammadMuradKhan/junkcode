# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/zzuf
pkgincludedir = $(includedir)/zzuf
pkglibdir = $(libdir)/zzuf
pkglibexecdir = $(libexecdir)/zzuf
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = zzuf$(EXEEXT) zzcat$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/cflags.m4 \
	$(top_srcdir)/m4/func.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(bindir)"
LTLIBRARIES = $(pkglib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libzzuf_la_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__objects_1 = libzzuf_la-libzzuf.lo libzzuf_la-debug.lo \
	libzzuf_la-sys.lo libzzuf_la-network.lo libzzuf_la-lib-fd.lo \
	libzzuf_la-lib-mem.lo libzzuf_la-lib-signal.lo \
	libzzuf_la-lib-stream.lo
am__objects_2 = libzzuf_la-random.lo libzzuf_la-ranges.lo \
	libzzuf_la-fd.lo libzzuf_la-fuzz.lo
am_libzzuf_la_OBJECTS = $(am__objects_1) $(am__objects_2)
libzzuf_la_OBJECTS = $(am_libzzuf_la_OBJECTS)
libzzuf_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libzzuf_la_CFLAGS) \
	$(CFLAGS) $(libzzuf_la_LDFLAGS) $(LDFLAGS) -o $@
PROGRAMS = $(bin_PROGRAMS)
am__zzcat_SOURCES_DIST = zzcat.c mygetopt.c mygetopt.h
am__objects_3 = zzcat.$(OBJEXT)
#am__objects_4 = mygetopt.$(OBJEXT)
am_zzcat_OBJECTS = $(am__objects_3) $(am__objects_4)
zzcat_OBJECTS = $(am_zzcat_OBJECTS)
zzcat_LDADD = $(LDADD)
am__zzuf_SOURCES_DIST = zzuf.c opts.c opts.h md5.c md5.h timer.c \
	timer.h myfork.c myfork.h common/common.h common/random.c \
	common/random.h common/ranges.c common/ranges.h common/fd.c \
	common/fd.h common/fuzz.c common/fuzz.h mygetopt.c mygetopt.h
am__objects_5 = zzuf-zzuf.$(OBJEXT) zzuf-opts.$(OBJEXT) \
	zzuf-md5.$(OBJEXT) zzuf-timer.$(OBJEXT) zzuf-myfork.$(OBJEXT)
am__objects_6 = zzuf-random.$(OBJEXT) zzuf-ranges.$(OBJEXT) \
	zzuf-fd.$(OBJEXT) zzuf-fuzz.$(OBJEXT)
#am__objects_7 = zzuf-mygetopt.$(OBJEXT)
am_zzuf_OBJECTS = $(am__objects_5) $(am__objects_6) $(am__objects_7)
zzuf_OBJECTS = $(am_zzuf_OBJECTS)
zzuf_LDADD = $(LDADD)
zzuf_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(zzuf_CFLAGS) $(CFLAGS) $(zzuf_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/.auto/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libzzuf_la_SOURCES) $(zzcat_SOURCES) $(zzuf_SOURCES)
DIST_SOURCES = $(libzzuf_la_SOURCES) $(am__zzcat_SOURCES_DIST) \
	$(am__zzuf_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/machbuild/proj/github/junkcode/programming/fuzz/zzuf-0.13/.auto/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/machbuild/proj/github/junkcode/programming/fuzz/zzuf-0.13/.auto/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/machbuild/proj/github/junkcode/programming/fuzz/zzuf-0.13/.auto/missing --run autoconf
AUTOHEADER = ${SHELL} /home/machbuild/proj/github/junkcode/programming/fuzz/zzuf-0.13/.auto/missing --run autoheader
AUTOMAKE = ${SHELL} /home/machbuild/proj/github/junkcode/programming/fuzz/zzuf-0.13/.auto/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -g -O2 -Wall -W -Wpointer-arith -Wcast-align -Wcast-qual -Wstrict-prototypes -Wshadow -Waggregate-return -Wmissing-prototypes -Wnested-externs -Wsign-compare
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLL_LDFLAGS = 
DL_LIBS = -ldl
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GETOPT_LIBS = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/machbuild/proj/github/junkcode/programming/fuzz/zzuf-0.13/.auto/missing --run makeinfo
MATH_LIBS = -lm
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = zzuf
PACKAGE_BUGREPORT = 
PACKAGE_NAME = zzuf
PACKAGE_STRING = zzuf 0.13
PACKAGE_TARNAME = zzuf
PACKAGE_URL = 
PACKAGE_VERSION = 0.13
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.13
WINSOCK2_LIBS = 
abs_builddir = /home/machbuild/proj/github/junkcode/programming/fuzz/zzuf-0.13/src
abs_srcdir = /home/machbuild/proj/github/junkcode/programming/fuzz/zzuf-0.13/src
abs_top_builddir = /home/machbuild/proj/github/junkcode/programming/fuzz/zzuf-0.13
abs_top_srcdir = /home/machbuild/proj/github/junkcode/programming/fuzz/zzuf-0.13
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/machbuild/proj/github/junkcode/programming/fuzz/zzuf-0.13/.auto/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
pkglib_LTLIBRARIES = libzzuf.la
ZZUF = \
    zzuf.c opts.c opts.h md5.c md5.h timer.c timer.h myfork.c myfork.h

ZZCAT = \
    zzcat.c

LIBZZUF = \
    libzzuf/libzzuf.c libzzuf/libzzuf.h \
    libzzuf/debug.c libzzuf/debug.h \
    libzzuf/sys.c libzzuf/sys.h \
    libzzuf/network.c libzzuf/network.h \
    libzzuf/lib-fd.c libzzuf/lib-mem.c libzzuf/lib-signal.c \
    libzzuf/lib-stream.c libzzuf/lib-load.h

COMMON = \
    common/common.h \
    common/random.c common/random.h \
    common/ranges.c common/ranges.h \
    common/fd.c common/fd.h \
    common/fuzz.c common/fuzz.h

#GETOPT = mygetopt.c mygetopt.h
zzuf_SOURCES = $(ZZUF) $(COMMON) $(GETOPT)
zzuf_CFLAGS = -DLIBDIR=\"$(libdir)/zzuf\" -I$(srcdir)/common
zzuf_LDFLAGS = $(MATH_LIBS) $(WINSOCK2_LIBS)
zzuf_DEPENDENCIES = libzzuf.la
zzcat_SOURCES = $(ZZCAT) $(GETOPT)
libzzuf_la_SOURCES = $(LIBZZUF) $(COMMON)
libzzuf_la_CFLAGS = -DLIBZZUF -I$(srcdir)/libzzuf -I$(srcdir)/common
libzzuf_la_LDFLAGS = -avoid-version -no-undefined $(DLL_LDFLAGS)
libzzuf_la_LIBADD = $(GETOPT_LIBS) $(DL_LIBS) $(MATH_LIBS) $(WINSOCK2_LIBS)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-pkglibLTLIBRARIES: $(pkglib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(pkglibdir)" || $(MKDIR_P) "$(DESTDIR)$(pkglibdir)"
	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(pkglibdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(pkglibdir)"; \
	}

uninstall-pkglibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(pkglibdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(pkglibdir)/$$f"; \
	done

clean-pkglibLTLIBRARIES:
	-test -z "$(pkglib_LTLIBRARIES)" || rm -f $(pkglib_LTLIBRARIES)
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libzzuf.la: $(libzzuf_la_OBJECTS) $(libzzuf_la_DEPENDENCIES) 
	$(libzzuf_la_LINK) -rpath $(pkglibdir) $(libzzuf_la_OBJECTS) $(libzzuf_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
zzcat$(EXEEXT): $(zzcat_OBJECTS) $(zzcat_DEPENDENCIES) 
	@rm -f zzcat$(EXEEXT)
	$(LINK) $(zzcat_OBJECTS) $(zzcat_LDADD) $(LIBS)
zzuf$(EXEEXT): $(zzuf_OBJECTS) $(zzuf_DEPENDENCIES) 
	@rm -f zzuf$(EXEEXT)
	$(zzuf_LINK) $(zzuf_OBJECTS) $(zzuf_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libzzuf_la-debug.Plo
include ./$(DEPDIR)/libzzuf_la-fd.Plo
include ./$(DEPDIR)/libzzuf_la-fuzz.Plo
include ./$(DEPDIR)/libzzuf_la-lib-fd.Plo
include ./$(DEPDIR)/libzzuf_la-lib-mem.Plo
include ./$(DEPDIR)/libzzuf_la-lib-signal.Plo
include ./$(DEPDIR)/libzzuf_la-lib-stream.Plo
include ./$(DEPDIR)/libzzuf_la-libzzuf.Plo
include ./$(DEPDIR)/libzzuf_la-network.Plo
include ./$(DEPDIR)/libzzuf_la-random.Plo
include ./$(DEPDIR)/libzzuf_la-ranges.Plo
include ./$(DEPDIR)/libzzuf_la-sys.Plo
include ./$(DEPDIR)/mygetopt.Po
include ./$(DEPDIR)/zzcat.Po
include ./$(DEPDIR)/zzuf-fd.Po
include ./$(DEPDIR)/zzuf-fuzz.Po
include ./$(DEPDIR)/zzuf-md5.Po
include ./$(DEPDIR)/zzuf-myfork.Po
include ./$(DEPDIR)/zzuf-mygetopt.Po
include ./$(DEPDIR)/zzuf-opts.Po
include ./$(DEPDIR)/zzuf-random.Po
include ./$(DEPDIR)/zzuf-ranges.Po
include ./$(DEPDIR)/zzuf-timer.Po
include ./$(DEPDIR)/zzuf-zzuf.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libzzuf_la-libzzuf.lo: libzzuf/libzzuf.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -MT libzzuf_la-libzzuf.lo -MD -MP -MF $(DEPDIR)/libzzuf_la-libzzuf.Tpo -c -o libzzuf_la-libzzuf.lo `test -f 'libzzuf/libzzuf.c' || echo '$(srcdir)/'`libzzuf/libzzuf.c
	$(am__mv) $(DEPDIR)/libzzuf_la-libzzuf.Tpo $(DEPDIR)/libzzuf_la-libzzuf.Plo
#	source='libzzuf/libzzuf.c' object='libzzuf_la-libzzuf.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -c -o libzzuf_la-libzzuf.lo `test -f 'libzzuf/libzzuf.c' || echo '$(srcdir)/'`libzzuf/libzzuf.c

libzzuf_la-debug.lo: libzzuf/debug.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -MT libzzuf_la-debug.lo -MD -MP -MF $(DEPDIR)/libzzuf_la-debug.Tpo -c -o libzzuf_la-debug.lo `test -f 'libzzuf/debug.c' || echo '$(srcdir)/'`libzzuf/debug.c
	$(am__mv) $(DEPDIR)/libzzuf_la-debug.Tpo $(DEPDIR)/libzzuf_la-debug.Plo
#	source='libzzuf/debug.c' object='libzzuf_la-debug.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -c -o libzzuf_la-debug.lo `test -f 'libzzuf/debug.c' || echo '$(srcdir)/'`libzzuf/debug.c

libzzuf_la-sys.lo: libzzuf/sys.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -MT libzzuf_la-sys.lo -MD -MP -MF $(DEPDIR)/libzzuf_la-sys.Tpo -c -o libzzuf_la-sys.lo `test -f 'libzzuf/sys.c' || echo '$(srcdir)/'`libzzuf/sys.c
	$(am__mv) $(DEPDIR)/libzzuf_la-sys.Tpo $(DEPDIR)/libzzuf_la-sys.Plo
#	source='libzzuf/sys.c' object='libzzuf_la-sys.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -c -o libzzuf_la-sys.lo `test -f 'libzzuf/sys.c' || echo '$(srcdir)/'`libzzuf/sys.c

libzzuf_la-network.lo: libzzuf/network.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -MT libzzuf_la-network.lo -MD -MP -MF $(DEPDIR)/libzzuf_la-network.Tpo -c -o libzzuf_la-network.lo `test -f 'libzzuf/network.c' || echo '$(srcdir)/'`libzzuf/network.c
	$(am__mv) $(DEPDIR)/libzzuf_la-network.Tpo $(DEPDIR)/libzzuf_la-network.Plo
#	source='libzzuf/network.c' object='libzzuf_la-network.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -c -o libzzuf_la-network.lo `test -f 'libzzuf/network.c' || echo '$(srcdir)/'`libzzuf/network.c

libzzuf_la-lib-fd.lo: libzzuf/lib-fd.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -MT libzzuf_la-lib-fd.lo -MD -MP -MF $(DEPDIR)/libzzuf_la-lib-fd.Tpo -c -o libzzuf_la-lib-fd.lo `test -f 'libzzuf/lib-fd.c' || echo '$(srcdir)/'`libzzuf/lib-fd.c
	$(am__mv) $(DEPDIR)/libzzuf_la-lib-fd.Tpo $(DEPDIR)/libzzuf_la-lib-fd.Plo
#	source='libzzuf/lib-fd.c' object='libzzuf_la-lib-fd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -c -o libzzuf_la-lib-fd.lo `test -f 'libzzuf/lib-fd.c' || echo '$(srcdir)/'`libzzuf/lib-fd.c

libzzuf_la-lib-mem.lo: libzzuf/lib-mem.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -MT libzzuf_la-lib-mem.lo -MD -MP -MF $(DEPDIR)/libzzuf_la-lib-mem.Tpo -c -o libzzuf_la-lib-mem.lo `test -f 'libzzuf/lib-mem.c' || echo '$(srcdir)/'`libzzuf/lib-mem.c
	$(am__mv) $(DEPDIR)/libzzuf_la-lib-mem.Tpo $(DEPDIR)/libzzuf_la-lib-mem.Plo
#	source='libzzuf/lib-mem.c' object='libzzuf_la-lib-mem.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -c -o libzzuf_la-lib-mem.lo `test -f 'libzzuf/lib-mem.c' || echo '$(srcdir)/'`libzzuf/lib-mem.c

libzzuf_la-lib-signal.lo: libzzuf/lib-signal.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -MT libzzuf_la-lib-signal.lo -MD -MP -MF $(DEPDIR)/libzzuf_la-lib-signal.Tpo -c -o libzzuf_la-lib-signal.lo `test -f 'libzzuf/lib-signal.c' || echo '$(srcdir)/'`libzzuf/lib-signal.c
	$(am__mv) $(DEPDIR)/libzzuf_la-lib-signal.Tpo $(DEPDIR)/libzzuf_la-lib-signal.Plo
#	source='libzzuf/lib-signal.c' object='libzzuf_la-lib-signal.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -c -o libzzuf_la-lib-signal.lo `test -f 'libzzuf/lib-signal.c' || echo '$(srcdir)/'`libzzuf/lib-signal.c

libzzuf_la-lib-stream.lo: libzzuf/lib-stream.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -MT libzzuf_la-lib-stream.lo -MD -MP -MF $(DEPDIR)/libzzuf_la-lib-stream.Tpo -c -o libzzuf_la-lib-stream.lo `test -f 'libzzuf/lib-stream.c' || echo '$(srcdir)/'`libzzuf/lib-stream.c
	$(am__mv) $(DEPDIR)/libzzuf_la-lib-stream.Tpo $(DEPDIR)/libzzuf_la-lib-stream.Plo
#	source='libzzuf/lib-stream.c' object='libzzuf_la-lib-stream.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -c -o libzzuf_la-lib-stream.lo `test -f 'libzzuf/lib-stream.c' || echo '$(srcdir)/'`libzzuf/lib-stream.c

libzzuf_la-random.lo: common/random.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -MT libzzuf_la-random.lo -MD -MP -MF $(DEPDIR)/libzzuf_la-random.Tpo -c -o libzzuf_la-random.lo `test -f 'common/random.c' || echo '$(srcdir)/'`common/random.c
	$(am__mv) $(DEPDIR)/libzzuf_la-random.Tpo $(DEPDIR)/libzzuf_la-random.Plo
#	source='common/random.c' object='libzzuf_la-random.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -c -o libzzuf_la-random.lo `test -f 'common/random.c' || echo '$(srcdir)/'`common/random.c

libzzuf_la-ranges.lo: common/ranges.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -MT libzzuf_la-ranges.lo -MD -MP -MF $(DEPDIR)/libzzuf_la-ranges.Tpo -c -o libzzuf_la-ranges.lo `test -f 'common/ranges.c' || echo '$(srcdir)/'`common/ranges.c
	$(am__mv) $(DEPDIR)/libzzuf_la-ranges.Tpo $(DEPDIR)/libzzuf_la-ranges.Plo
#	source='common/ranges.c' object='libzzuf_la-ranges.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -c -o libzzuf_la-ranges.lo `test -f 'common/ranges.c' || echo '$(srcdir)/'`common/ranges.c

libzzuf_la-fd.lo: common/fd.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -MT libzzuf_la-fd.lo -MD -MP -MF $(DEPDIR)/libzzuf_la-fd.Tpo -c -o libzzuf_la-fd.lo `test -f 'common/fd.c' || echo '$(srcdir)/'`common/fd.c
	$(am__mv) $(DEPDIR)/libzzuf_la-fd.Tpo $(DEPDIR)/libzzuf_la-fd.Plo
#	source='common/fd.c' object='libzzuf_la-fd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -c -o libzzuf_la-fd.lo `test -f 'common/fd.c' || echo '$(srcdir)/'`common/fd.c

libzzuf_la-fuzz.lo: common/fuzz.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -MT libzzuf_la-fuzz.lo -MD -MP -MF $(DEPDIR)/libzzuf_la-fuzz.Tpo -c -o libzzuf_la-fuzz.lo `test -f 'common/fuzz.c' || echo '$(srcdir)/'`common/fuzz.c
	$(am__mv) $(DEPDIR)/libzzuf_la-fuzz.Tpo $(DEPDIR)/libzzuf_la-fuzz.Plo
#	source='common/fuzz.c' object='libzzuf_la-fuzz.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzzuf_la_CFLAGS) $(CFLAGS) -c -o libzzuf_la-fuzz.lo `test -f 'common/fuzz.c' || echo '$(srcdir)/'`common/fuzz.c

zzuf-zzuf.o: zzuf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -MT zzuf-zzuf.o -MD -MP -MF $(DEPDIR)/zzuf-zzuf.Tpo -c -o zzuf-zzuf.o `test -f 'zzuf.c' || echo '$(srcdir)/'`zzuf.c
	$(am__mv) $(DEPDIR)/zzuf-zzuf.Tpo $(DEPDIR)/zzuf-zzuf.Po
#	source='zzuf.c' object='zzuf-zzuf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -c -o zzuf-zzuf.o `test -f 'zzuf.c' || echo '$(srcdir)/'`zzuf.c

zzuf-zzuf.obj: zzuf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -MT zzuf-zzuf.obj -MD -MP -MF $(DEPDIR)/zzuf-zzuf.Tpo -c -o zzuf-zzuf.obj `if test -f 'zzuf.c'; then $(CYGPATH_W) 'zzuf.c'; else $(CYGPATH_W) '$(srcdir)/zzuf.c'; fi`
	$(am__mv) $(DEPDIR)/zzuf-zzuf.Tpo $(DEPDIR)/zzuf-zzuf.Po
#	source='zzuf.c' object='zzuf-zzuf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -c -o zzuf-zzuf.obj `if test -f 'zzuf.c'; then $(CYGPATH_W) 'zzuf.c'; else $(CYGPATH_W) '$(srcdir)/zzuf.c'; fi`

zzuf-opts.o: opts.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -MT zzuf-opts.o -MD -MP -MF $(DEPDIR)/zzuf-opts.Tpo -c -o zzuf-opts.o `test -f 'opts.c' || echo '$(srcdir)/'`opts.c
	$(am__mv) $(DEPDIR)/zzuf-opts.Tpo $(DEPDIR)/zzuf-opts.Po
#	source='opts.c' object='zzuf-opts.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -c -o zzuf-opts.o `test -f 'opts.c' || echo '$(srcdir)/'`opts.c

zzuf-opts.obj: opts.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -MT zzuf-opts.obj -MD -MP -MF $(DEPDIR)/zzuf-opts.Tpo -c -o zzuf-opts.obj `if test -f 'opts.c'; then $(CYGPATH_W) 'opts.c'; else $(CYGPATH_W) '$(srcdir)/opts.c'; fi`
	$(am__mv) $(DEPDIR)/zzuf-opts.Tpo $(DEPDIR)/zzuf-opts.Po
#	source='opts.c' object='zzuf-opts.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -c -o zzuf-opts.obj `if test -f 'opts.c'; then $(CYGPATH_W) 'opts.c'; else $(CYGPATH_W) '$(srcdir)/opts.c'; fi`

zzuf-md5.o: md5.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -MT zzuf-md5.o -MD -MP -MF $(DEPDIR)/zzuf-md5.Tpo -c -o zzuf-md5.o `test -f 'md5.c' || echo '$(srcdir)/'`md5.c
	$(am__mv) $(DEPDIR)/zzuf-md5.Tpo $(DEPDIR)/zzuf-md5.Po
#	source='md5.c' object='zzuf-md5.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -c -o zzuf-md5.o `test -f 'md5.c' || echo '$(srcdir)/'`md5.c

zzuf-md5.obj: md5.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -MT zzuf-md5.obj -MD -MP -MF $(DEPDIR)/zzuf-md5.Tpo -c -o zzuf-md5.obj `if test -f 'md5.c'; then $(CYGPATH_W) 'md5.c'; else $(CYGPATH_W) '$(srcdir)/md5.c'; fi`
	$(am__mv) $(DEPDIR)/zzuf-md5.Tpo $(DEPDIR)/zzuf-md5.Po
#	source='md5.c' object='zzuf-md5.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -c -o zzuf-md5.obj `if test -f 'md5.c'; then $(CYGPATH_W) 'md5.c'; else $(CYGPATH_W) '$(srcdir)/md5.c'; fi`

zzuf-timer.o: timer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -MT zzuf-timer.o -MD -MP -MF $(DEPDIR)/zzuf-timer.Tpo -c -o zzuf-timer.o `test -f 'timer.c' || echo '$(srcdir)/'`timer.c
	$(am__mv) $(DEPDIR)/zzuf-timer.Tpo $(DEPDIR)/zzuf-timer.Po
#	source='timer.c' object='zzuf-timer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -c -o zzuf-timer.o `test -f 'timer.c' || echo '$(srcdir)/'`timer.c

zzuf-timer.obj: timer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -MT zzuf-timer.obj -MD -MP -MF $(DEPDIR)/zzuf-timer.Tpo -c -o zzuf-timer.obj `if test -f 'timer.c'; then $(CYGPATH_W) 'timer.c'; else $(CYGPATH_W) '$(srcdir)/timer.c'; fi`
	$(am__mv) $(DEPDIR)/zzuf-timer.Tpo $(DEPDIR)/zzuf-timer.Po
#	source='timer.c' object='zzuf-timer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -c -o zzuf-timer.obj `if test -f 'timer.c'; then $(CYGPATH_W) 'timer.c'; else $(CYGPATH_W) '$(srcdir)/timer.c'; fi`

zzuf-myfork.o: myfork.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -MT zzuf-myfork.o -MD -MP -MF $(DEPDIR)/zzuf-myfork.Tpo -c -o zzuf-myfork.o `test -f 'myfork.c' || echo '$(srcdir)/'`myfork.c
	$(am__mv) $(DEPDIR)/zzuf-myfork.Tpo $(DEPDIR)/zzuf-myfork.Po
#	source='myfork.c' object='zzuf-myfork.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -c -o zzuf-myfork.o `test -f 'myfork.c' || echo '$(srcdir)/'`myfork.c

zzuf-myfork.obj: myfork.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -MT zzuf-myfork.obj -MD -MP -MF $(DEPDIR)/zzuf-myfork.Tpo -c -o zzuf-myfork.obj `if test -f 'myfork.c'; then $(CYGPATH_W) 'myfork.c'; else $(CYGPATH_W) '$(srcdir)/myfork.c'; fi`
	$(am__mv) $(DEPDIR)/zzuf-myfork.Tpo $(DEPDIR)/zzuf-myfork.Po
#	source='myfork.c' object='zzuf-myfork.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -c -o zzuf-myfork.obj `if test -f 'myfork.c'; then $(CYGPATH_W) 'myfork.c'; else $(CYGPATH_W) '$(srcdir)/myfork.c'; fi`

zzuf-random.o: common/random.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -MT zzuf-random.o -MD -MP -MF $(DEPDIR)/zzuf-random.Tpo -c -o zzuf-random.o `test -f 'common/random.c' || echo '$(srcdir)/'`common/random.c
	$(am__mv) $(DEPDIR)/zzuf-random.Tpo $(DEPDIR)/zzuf-random.Po
#	source='common/random.c' object='zzuf-random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -c -o zzuf-random.o `test -f 'common/random.c' || echo '$(srcdir)/'`common/random.c

zzuf-random.obj: common/random.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -MT zzuf-random.obj -MD -MP -MF $(DEPDIR)/zzuf-random.Tpo -c -o zzuf-random.obj `if test -f 'common/random.c'; then $(CYGPATH_W) 'common/random.c'; else $(CYGPATH_W) '$(srcdir)/common/random.c'; fi`
	$(am__mv) $(DEPDIR)/zzuf-random.Tpo $(DEPDIR)/zzuf-random.Po
#	source='common/random.c' object='zzuf-random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -c -o zzuf-random.obj `if test -f 'common/random.c'; then $(CYGPATH_W) 'common/random.c'; else $(CYGPATH_W) '$(srcdir)/common/random.c'; fi`

zzuf-ranges.o: common/ranges.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -MT zzuf-ranges.o -MD -MP -MF $(DEPDIR)/zzuf-ranges.Tpo -c -o zzuf-ranges.o `test -f 'common/ranges.c' || echo '$(srcdir)/'`common/ranges.c
	$(am__mv) $(DEPDIR)/zzuf-ranges.Tpo $(DEPDIR)/zzuf-ranges.Po
#	source='common/ranges.c' object='zzuf-ranges.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -c -o zzuf-ranges.o `test -f 'common/ranges.c' || echo '$(srcdir)/'`common/ranges.c

zzuf-ranges.obj: common/ranges.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -MT zzuf-ranges.obj -MD -MP -MF $(DEPDIR)/zzuf-ranges.Tpo -c -o zzuf-ranges.obj `if test -f 'common/ranges.c'; then $(CYGPATH_W) 'common/ranges.c'; else $(CYGPATH_W) '$(srcdir)/common/ranges.c'; fi`
	$(am__mv) $(DEPDIR)/zzuf-ranges.Tpo $(DEPDIR)/zzuf-ranges.Po
#	source='common/ranges.c' object='zzuf-ranges.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -c -o zzuf-ranges.obj `if test -f 'common/ranges.c'; then $(CYGPATH_W) 'common/ranges.c'; else $(CYGPATH_W) '$(srcdir)/common/ranges.c'; fi`

zzuf-fd.o: common/fd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -MT zzuf-fd.o -MD -MP -MF $(DEPDIR)/zzuf-fd.Tpo -c -o zzuf-fd.o `test -f 'common/fd.c' || echo '$(srcdir)/'`common/fd.c
	$(am__mv) $(DEPDIR)/zzuf-fd.Tpo $(DEPDIR)/zzuf-fd.Po
#	source='common/fd.c' object='zzuf-fd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -c -o zzuf-fd.o `test -f 'common/fd.c' || echo '$(srcdir)/'`common/fd.c

zzuf-fd.obj: common/fd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -MT zzuf-fd.obj -MD -MP -MF $(DEPDIR)/zzuf-fd.Tpo -c -o zzuf-fd.obj `if test -f 'common/fd.c'; then $(CYGPATH_W) 'common/fd.c'; else $(CYGPATH_W) '$(srcdir)/common/fd.c'; fi`
	$(am__mv) $(DEPDIR)/zzuf-fd.Tpo $(DEPDIR)/zzuf-fd.Po
#	source='common/fd.c' object='zzuf-fd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -c -o zzuf-fd.obj `if test -f 'common/fd.c'; then $(CYGPATH_W) 'common/fd.c'; else $(CYGPATH_W) '$(srcdir)/common/fd.c'; fi`

zzuf-fuzz.o: common/fuzz.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -MT zzuf-fuzz.o -MD -MP -MF $(DEPDIR)/zzuf-fuzz.Tpo -c -o zzuf-fuzz.o `test -f 'common/fuzz.c' || echo '$(srcdir)/'`common/fuzz.c
	$(am__mv) $(DEPDIR)/zzuf-fuzz.Tpo $(DEPDIR)/zzuf-fuzz.Po
#	source='common/fuzz.c' object='zzuf-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -c -o zzuf-fuzz.o `test -f 'common/fuzz.c' || echo '$(srcdir)/'`common/fuzz.c

zzuf-fuzz.obj: common/fuzz.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -MT zzuf-fuzz.obj -MD -MP -MF $(DEPDIR)/zzuf-fuzz.Tpo -c -o zzuf-fuzz.obj `if test -f 'common/fuzz.c'; then $(CYGPATH_W) 'common/fuzz.c'; else $(CYGPATH_W) '$(srcdir)/common/fuzz.c'; fi`
	$(am__mv) $(DEPDIR)/zzuf-fuzz.Tpo $(DEPDIR)/zzuf-fuzz.Po
#	source='common/fuzz.c' object='zzuf-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -c -o zzuf-fuzz.obj `if test -f 'common/fuzz.c'; then $(CYGPATH_W) 'common/fuzz.c'; else $(CYGPATH_W) '$(srcdir)/common/fuzz.c'; fi`

zzuf-mygetopt.o: mygetopt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -MT zzuf-mygetopt.o -MD -MP -MF $(DEPDIR)/zzuf-mygetopt.Tpo -c -o zzuf-mygetopt.o `test -f 'mygetopt.c' || echo '$(srcdir)/'`mygetopt.c
	$(am__mv) $(DEPDIR)/zzuf-mygetopt.Tpo $(DEPDIR)/zzuf-mygetopt.Po
#	source='mygetopt.c' object='zzuf-mygetopt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -c -o zzuf-mygetopt.o `test -f 'mygetopt.c' || echo '$(srcdir)/'`mygetopt.c

zzuf-mygetopt.obj: mygetopt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -MT zzuf-mygetopt.obj -MD -MP -MF $(DEPDIR)/zzuf-mygetopt.Tpo -c -o zzuf-mygetopt.obj `if test -f 'mygetopt.c'; then $(CYGPATH_W) 'mygetopt.c'; else $(CYGPATH_W) '$(srcdir)/mygetopt.c'; fi`
	$(am__mv) $(DEPDIR)/zzuf-mygetopt.Tpo $(DEPDIR)/zzuf-mygetopt.Po
#	source='mygetopt.c' object='zzuf-mygetopt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zzuf_CFLAGS) $(CFLAGS) -c -o zzuf-mygetopt.obj `if test -f 'mygetopt.c'; then $(CYGPATH_W) 'mygetopt.c'; else $(CYGPATH_W) '$(srcdir)/mygetopt.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-pkglibLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-pkglibLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-pkglibLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool clean-pkglibLTLIBRARIES ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-pkglibLTLIBRARIES install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-pkglibLTLIBRARIES


echo-sources: ; echo $(SOURCES)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
