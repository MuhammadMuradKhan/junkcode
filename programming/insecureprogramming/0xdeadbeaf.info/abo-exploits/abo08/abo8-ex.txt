$Id: abo8-ex.txt,v 1.1.1.1 2003/10/15 17:27:57 raptor Exp $

NOTE about abo8.c heap overflow exploitation
Copyright (c) 2003 Marco Ivaldi <raptor@0xdeadbeef.info>

See http://community.core-sdi.com/~gera/InsecureProgramming/

The dynamically linked binary is not vulnerable, because the overflowable 
buffer is located at the end of the .bss section:

$ objdump abo8 --syms | grep bss
08049580 l    d  .bss   00000000              
08049580 l     O .bss   00000018              object.11
0804957c g       *ABS*  00000000              __bss_start
080495a0 g     O .bss   00000100              buf

The statically linked binary is indeed vulnerable, however exploitation with
newer compilers is not as straight-forward as it was with previous versions 
(where corruption of __exit_funcs with an arbitrary value was possible):

$ gcc --version
2.95.3
$ objdump abo8 --syms | grep bss
[...]
080a43c0 g     O .bss   00000100 buf
080a44d4 g     O .bss   00000004 _dl_init_all_dirs
080a45b4 g     O .bss   00000004 __libc_missing_rt_sigs
080a4580 g     O .bss   00000034 _nl_locale_file_list
080a4518 g     O .bss   00000004 _dl_verbose
080a451c g     O .bss   00000004 _dl_loaded
080a4520 g     O .bss   00000004 _dl_profile_map
080a3c9c  w    O .bss   00000004 _errno
080a49cc g     O .bss   00000004 __use_tzfile
080a44d8 g     O .bss   00000004 _dl_initfirst
080a4530 g     O .bss   00000004 __libc_argv
080a44dc g     O .bss   00000004 _dl_all_dirs
080a4544 g     O .bss   00000004 __gconv_alias_db
080a4a14 g     O .bss   00000014 _r_debug
080a44e0 g     O .bss   00000004 _dl_osversion
080a4a0c g     O .bss   00000004 _dl_num_cache_relocations
080a4524 g     O .bss   00000004 _dl_inhibit_rpath
080a4528 g     O .bss   00000004 _dl_search_paths
080a44e4 g     O .bss   00000004 _dl_pagesize

Now __exit_funcs is located in the .data section, placed way before the buffer:

$ objdump abo8 --syms | sort -k 1 | grep exit
00000000 l    df *ABS*  00000000 cxa_atexit.c
00000000 l    df *ABS*  00000000 exit.c
080483a0 g     F .text  000000b8 exit
08048460 g     F .text  00000039 __cxa_atexit
0804849c g     F .text  000000e0 __new_exitfn
0804c000 g     F .text  0000001a _exit
080a0ed4 g       *ABS*  00000000 __start___libc_atexit
080a0ed4 l     O __libc_atexit  00000004 __elf_set___libc_atexit_element__cleanup__
080a0ed4 l    d  __libc_atexit  00000000 
080a0ed8 g       *ABS*  00000000 __stop___libc_atexit
080a100c g     O .data  00000004 __exit_funcs
^^^^^^^^         ^^^^^           ^^^^^^^^^^^^\__(not reachable from buf)
